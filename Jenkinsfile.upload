#!/bin/env groovy
@Library(['cliqz-shared-library@v1.2', 'stefano-lib@minSdkSupport']) _

properties([
    parameters([
        booleanParam(name: 'CLIQZ', defaultValue: false, description: 'Builds and uploads the Cliqz brand to Play Store. If False, the Ghostery Brand.')
    ])
])

node('master') {

    def dockerTag = ""

    stage('Checkout') {
        checkout scm
        dockerTag = readFile('mozilla-release/browser/config/version.txt').trim()
    }
    def baseImageName = "browser-f/android:${dockerTag}"
    baseImage = stage('Build base image') {
        docker.build(baseImageName, '--build-arg USER=`whoami` --build-arg UID=`id -u` --build-arg GID=`id -g` -f Dockerfile .')
    }
    baseImage.inside() {
        try {
            def apk = ""
            def brand = (params.CLIQZ) ? "cliqz" : "ghostery"
            stage('Build and Signs APKS') {
                cliqz.buildCliqzReactNative("cliqz")
                
                withCredentials([
                    file(credentialsId: 'd746a1dd-e075-4844-869a-32116a496352', variable: 'CERT_PATH' ),
                    string(credentialsId: 'b7422020-fe1b-4c57-9230-f3d52afee3cf', variable: 'CERT_PASS')
                ]) {
                    def archs = [
                        //  ARCH                        MIN_SDK
//                        [   "x86_64-linux-android",     21       ],
                        [   "aarch64-linux-android",    21       ],
//                        [   "i686-linux-android",       16       ],
                        [   "arm-linux-androideabi",    16       ] ]
                    archs.each {
                        def (arch, minSdk) = it
                        apk = cliqz.buildBrowser(arch, minSdk, brand, "release")
                        sh "cp build/${apk} mozilla-release/mobile/android/${apk}"
                    }
                }
            }
            stage('Upload') {
                def storeCert = '81d5a4c2-c504-4d18-a29f-18421bb04ddc'
                if (params.CLIQZ){
                    storeCert = '2939d2e1-dd9a-4097-adc2-430e3d67157a'
                }
                archiveArtifacts allowEmptyArchive: true, artifacts: "build/*.apk"
                utils.fastlaneRelease(
                    "${brand}",
                    'd746a1dd-e075-4844-869a-32116a496352',
                    'b7422020-fe1b-4c57-9230-f3d52afee3cf',
                    storeCert
                )
            }
        }
        finally {
            stage('Clean Up') {
                utils.cleanUp()
                sh 'rm -rf mozilla-release/mobile/android/*.apk'
            }
        }
    }
}
